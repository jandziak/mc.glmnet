{
    "contents" : "#' Multiple Core Multiple Model glmnet calculations\n#'\n#' Package mc.glmnet performs fit of L1 penalised model to the data. It is introduction \n#' to solution for Graphical Gaussion Models precission matrix. There had been used \n#' parallel computing in order to reduce time of computations. \n#'\n#' For solving simple lasso problem, the number of predictors is usualy\n#' reasonably small so the time of computations is not crutial. \n#' For Graphical Gaussian Models number of parameters to be estimated is\n#' squared. \n#' \n#' The main function of package mc.glmnet is\n#' \\code{\\link{mcmm.glmnet}} which allows to solve multiple Lasso problems \n#' using parallel computations. For large number of predictros solution presents \n#' significant better performance than usage of simple onee core computations.  \n#'\n#' We also provide function \\code{\\link{sm.glmnet}} that computes single model \n#' single L1 penalised model for generated inside data.  \n#' \n#' Note that Windows users for propper evaluation of mcmm.glmnet and reduction \n#' in computation time, script available at http://www.stat.cmu.edu/~nmv/setup/mclapply.hack.R\n#'\n#' @docType package\n#' @name mc.glmnet\n#' @details Version: 0.1.1\n#' @importFrom glmnet glmnet\n#' @importFrom parallel mclapply\n#' @author Jan Idziak\n#' \n#' Maintainer: Jan Idziak \\email{Jan.Idziak@@gmail.com}\n#'\n#' @examples\n#' \\donttest{\n#' library(GeneNet)\n#' graph.data.generate <- function(seed = 42048, fraction = 0.1, p = 500, n = 50, b.values = rep(2,50)){\n#' set.seed(seed)\n#' data <- list() \n#' precision <- ggm.simulate.pcor(p, fraction)\n#' data$X <- ggm.simulate.data(n, precision)\n#' beta <- c(b.values, rep(0, times = p-length(b.values)))\n#' probs <- round(1/(1+(exp(-data$X%*%beta))), digits = 4)\n#' data$Y <- rbinom(n, 1, probs)\n#' return(data)}\n#' sm.glmnet(graph.data.generate)\n#' sm.glmnet(graph.data.generate, p = 500, n = 50)\n#' sm.glmnet(graph.data.generate, fraction = 0.05 ,p = 500, n = 100)\n#' mcmm.glmnet(graph.data.generate)\n#' mcmm.glmnet(graph.data.generate, p = 500, n = 50)\n#' mcmm.glmnet(graph.data.generate, fraction = 0.05 ,p = 500, n = 100)\n#' }\nNULL",
    "created" : 1426985074641.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2298398650",
    "id" : "62E69DC5",
    "lastKnownWriteTime" : 1426986094,
    "path" : "C:/Users/Math/mc.glmnet/R/mc.glmnet.R",
    "project_path" : "R/mc.glmnet.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}